/*
 * BackwardChainerUTest.cxxtest
 *
 *  Created on: Oct 20, 2014
 *      Authors: misgana
 ^             : Nil Geisweiller (2015-2016)
 */
#include <opencog/rule-engine/backwardchainer/BIT.h>
#include <opencog/guile/SchemeEval.h>
#include <opencog/atomspace/AtomSpace.h>

#include <cxxtest/TestSuite.h>

using namespace std;
using namespace opencog;

//#define DEBUG 1

#define al _as.add_link
#define an _as.add_node

class BITUTest: public CxxTest::TestSuite
{
private:
	AtomSpace _as;
	SchemeEval _eval;

public:
	BITUTest() : _eval(&_as)
	{
		logger().set_level(Logger::INFO);
		logger().set_timestamp_flag(false);
		// logger().set_sync_flag(true);
		// logger().set_print_to_stdout_flag(true);
	}

	void setUp();
	void tearDown();

	void test_get_leaves();
};

void BITUTest::setUp()
{
	string cur_pp_dir = string(PROJECT_SOURCE_DIR),
		cur_p_dir = cur_pp_dir + "/tests",
		cur_dir = cur_p_dir + "/rule-engine";
	vector<string> load_paths = {cur_pp_dir, cur_p_dir, cur_dir};
	for (string& p : load_paths)
	{
		string eval_str = string("(add-to-load-path \"") + p + string("\")");
		_eval.eval(eval_str);
	}
	_eval.eval("(use-modules (opencog))");
	// _eval.eval("(use-modules (opencog rule-engine))");
}

void BITUTest::tearDown()
{
	_as.clear();
}

void BITUTest::test_get_leaves()
{
	AndBIT andbit(_eval.eval_h("(BindLink"
	                           "  (AndLink"
	                           "    (LocalQuoteLink"
	                           "      (AndLink"
	                           "        (LambdaLink"
	                           "          (TypedVariableLink"
	                           "            (VariableNode \"$X\")"
	                           "            (TypeNode \"ConceptNode\")"
	                           "          )"
	                           "          (EvaluationLink"
	                           "            (PredicateNode \"contain\")"
	                           "            (ListLink"
	                           "              (ConceptNode \"treatment-1\")"
	                           "              (ConceptNode \"compound-A\")"
	                           "            )"
	                           "          )"
	                           "        )"
	                           "        (LambdaLink"
	                           "          (TypedVariableLink"
	                           "            (VariableNode \"$X\")"
	                           "            (TypeNode \"ConceptNode\")"
	                           "          )"
	                           "          (EvaluationLink"
	                           "            (PredicateNode \"take\")"
	                           "            (ListLink"
	                           "              (VariableNode \"$X\")"
	                           "              (ConceptNode \"treatment-1\")"
	                           "            )"
	                           "          )"
	                           "        )"
	                           "      )"
	                           "    )"
	                           "    (NotLink"
	                           "      (IdenticalLink"
	                           "        (LambdaLink"
	                           "          (TypedVariableLink"
	                           "            (VariableNode \"$X\")"
	                           "            (TypeNode \"ConceptNode\")"
	                           "          )"
	                           "          (EvaluationLink"
	                           "            (PredicateNode \"take\")"
	                           "            (ListLink"
	                           "              (VariableNode \"$X\")"
	                           "              (ConceptNode \"treatment-1\")"
	                           "            )"
	                           "          )"
	                           "        )"
	                           "        (LambdaLink"
	                           "          (TypedVariableLink"
	                           "            (VariableNode \"$X\")"
	                           "            (TypeNode \"ConceptNode\")"
	                           "          )"
	                           "          (AndLink"
	                           "            (EvaluationLink"
	                           "              (PredicateNode \"contain\")"
	                           "              (ListLink"
	                           "                (ConceptNode \"treatment-1\")"
	                           "                (ConceptNode \"compound-A\")"
	                           "              )"
	                           "            )"
	                           "            (EvaluationLink"
	                           "              (PredicateNode \"take\")"
	                           "              (ListLink"
	                           "                (VariableNode \"$X\")"
	                           "                (ConceptNode \"treatment-1\")"
	                           "              )"
	                           "            )"
	                           "          )"
	                           "        )"
	                           "      )"
	                           "    )"
	                           "    (NotLink"
	                           "      (EqualLink"
	                           "        (LambdaLink"
	                           "          (TypedVariableLink"
	                           "            (VariableNode \"$X\")"
	                           "            (TypeNode \"ConceptNode\")"
	                           "          )"
	                           "          (EvaluationLink"
	                           "            (PredicateNode \"contain\")"
	                           "            (ListLink"
	                           "              (ConceptNode \"treatment-1\")"
	                           "              (ConceptNode \"compound-A\")"
	                           "            )"
	                           "          )"
	                           "        )"
	                           "        (LambdaLink"
	                           "          (TypedVariableLink"
	                           "            (VariableNode \"$X\")"
	                           "            (TypeNode \"ConceptNode\")"
	                           "          )"
	                           "          (EvaluationLink"
	                           "            (PredicateNode \"take\")"
	                           "            (ListLink"
	                           "              (VariableNode \"$X\")"
	                           "              (ConceptNode \"treatment-1\")"
	                           "            )"
	                           "          )"
	                           "        )"
	                           "      )"
	                           "    )"
	                           "    (EvaluationLink"
	                           "      (GroundedPredicateNode \"scm: implication-construction-precondition\")"
	                           "      (ListLink"
	                           "        (LambdaLink"
	                           "          (TypedVariableLink"
	                           "            (VariableNode \"$X\")"
	                           "            (TypeNode \"ConceptNode\")"
	                           "          )"
	                           "          (EvaluationLink"
	                           "            (PredicateNode \"take\")"
	                           "            (ListLink"
	                           "              (VariableNode \"$X\")"
	                           "              (ConceptNode \"treatment-1\")"
	                           "            )"
	                           "          )"
	                           "        )"
	                           "        (LambdaLink"
	                           "          (TypedVariableLink"
	                           "            (VariableNode \"$X\")"
	                           "            (TypeNode \"ConceptNode\")"
	                           "          )"
	                           "          (EvaluationLink"
	                           "            (PredicateNode \"contain\")"
	                           "            (ListLink"
	                           "              (ConceptNode \"treatment-1\")"
	                           "              (ConceptNode \"compound-A\")"
	                           "            )"
	                           "          )"
	                           "        )"
	                           "      )"
	                           "    )"
	                           "    (LambdaLink"
	                           "      (TypedVariableLink"
	                           "        (VariableNode \"$X\")"
	                           "        (TypeNode \"ConceptNode\")"
	                           "      )"
	                           "      (EvaluationLink"
	                           "        (PredicateNode \"contain\")"
	                           "        (ListLink"
	                           "          (ConceptNode \"treatment-1\")"
	                           "          (ConceptNode \"compound-A\")"
	                           "        )"
	                           "      )"
	                           "    )"
	                           "    (LambdaLink"
	                           "      (TypedVariableLink"
	                           "        (VariableNode \"$X\")"
	                           "        (TypeNode \"ConceptNode\")"
	                           "      )"
	                           "      (EvaluationLink"
	                           "        (PredicateNode \"take\")"
	                           "        (ListLink"
	                           "          (VariableNode \"$X\")"
	                           "          (ConceptNode \"treatment-1\")"
	                           "        )"
	                           "      )"
	                           "    )"
	                           "  )"
	                           "  (ExecutionOutputLink"
	                           "    (GroundedSchemaNode \"scm: deduction-formula\")"
	                           "    (ListLink"
	                           "      (ImplicationLink"
	                           "        (LambdaLink"
	                           "          (TypedVariableLink"
	                           "            (VariableNode \"$X\")"
	                           "            (TypeNode \"ConceptNode\")"
	                           "          )"
	                           "          (EvaluationLink"
	                           "            (PredicateNode \"take\")"
	                           "            (ListLink"
	                           "              (VariableNode \"$X\")"
	                           "              (ConceptNode \"treatment-1\")"
	                           "            )"
	                           "          )"
	                           "        )"
	                           "        (LambdaLink"
	                           "          (TypedVariableLink"
	                           "            (VariableNode \"$X\")"
	                           "            (TypeNode \"ConceptNode\")"
	                           "          )"
	                           "          (AndLink"
	                           "            (EvaluationLink"
	                           "              (PredicateNode \"contain\")"
	                           "              (ListLink"
	                           "                (ConceptNode \"treatment-1\")"
	                           "                (ConceptNode \"compound-A\")"
	                           "              )"
	                           "            )"
	                           "            (EvaluationLink"
	                           "              (PredicateNode \"take\")"
	                           "              (ListLink"
	                           "                (VariableNode \"$X\")"
	                           "                (ConceptNode \"treatment-1\")"
	                           "              )"
	                           "            )"
	                           "          )"
	                           "        )"
	                           "      )"
	                           "      (ExecutionOutputLink"
	                           "        (GroundedSchemaNode \"scm: implication-implicant-distribution-formula\")"
	                           "        (ListLink"
	                           "          (ImplicationLink"
	                           "            (LambdaLink"
	                           "              (TypedVariableLink"
	                           "                (VariableNode \"$X\")"
	                           "                (TypeNode \"ConceptNode\")"
	                           "              )"
	                           "              (EvaluationLink"
	                           "                (PredicateNode \"take\")"
	                           "                (ListLink"
	                           "                  (VariableNode \"$X\")"
	                           "                  (ConceptNode \"treatment-1\")"
	                           "                )"
	                           "              )"
	                           "            )"
	                           "            (AndLink"
	                           "              (LambdaLink"
	                           "                (TypedVariableLink"
	                           "                  (VariableNode \"$X\")"
	                           "                  (TypeNode \"ConceptNode\")"
	                           "                )"
	                           "                (EvaluationLink"
	                           "                  (PredicateNode \"contain\")"
	                           "                  (ListLink"
	                           "                    (ConceptNode \"treatment-1\")"
	                           "                    (ConceptNode \"compound-A\")"
	                           "                  )"
	                           "                )"
	                           "              )"
	                           "              (LambdaLink"
	                           "                (TypedVariableLink"
	                           "                  (VariableNode \"$X\")"
	                           "                  (TypeNode \"ConceptNode\")"
	                           "                )"
	                           "                (EvaluationLink"
	                           "                  (PredicateNode \"take\")"
	                           "                  (ListLink"
	                           "                    (VariableNode \"$X\")"
	                           "                    (ConceptNode \"treatment-1\")"
	                           "                  )"
	                           "                )"
	                           "              )"
	                           "            )"
	                           "          )"
	                           "          (ExecutionOutputLink"
	                           "            (GroundedSchemaNode \"scm: implication-construction-formula\")"
	                           "            (ListLink"
	                           "              (ImplicationLink"
	                           "                (LambdaLink"
	                           "                  (TypedVariableLink"
	                           "                    (VariableNode \"$X\")"
	                           "                    (TypeNode \"ConceptNode\")"
	                           "                  )"
	                           "                  (EvaluationLink"
	                           "                    (PredicateNode \"take\")"
	                           "                    (ListLink"
	                           "                      (VariableNode \"$X\")"
	                           "                      (ConceptNode \"treatment-1\")"
	                           "                    )"
	                           "                  )"
	                           "                )"
	                           "                (LambdaLink"
	                           "                  (TypedVariableLink"
	                           "                    (VariableNode \"$X\")"
	                           "                    (TypeNode \"ConceptNode\")"
	                           "                  )"
	                           "                  (EvaluationLink"
	                           "                    (PredicateNode \"contain\")"
	                           "                    (ListLink"
	                           "                      (ConceptNode \"treatment-1\")"
	                           "                      (ConceptNode \"compound-A\")"
	                           "                    )"
	                           "                  )"
	                           "                )"
	                           "              )"
	                           "              (LambdaLink"
	                           "                (TypedVariableLink"
	                           "                  (VariableNode \"$X\")"
	                           "                  (TypeNode \"ConceptNode\")"
	                           "                )"
	                           "                (EvaluationLink"
	                           "                  (PredicateNode \"take\")"
	                           "                  (ListLink"
	                           "                    (VariableNode \"$X\")"
	                           "                    (ConceptNode \"treatment-1\")"
	                           "                  )"
	                           "                )"
	                           "              )"
	                           "              (LambdaLink"
	                           "                (TypedVariableLink"
	                           "                  (VariableNode \"$X\")"
	                           "                  (TypeNode \"ConceptNode\")"
	                           "                )"
	                           "                (EvaluationLink"
	                           "                  (PredicateNode \"contain\")"
	                           "                  (ListLink"
	                           "                    (ConceptNode \"treatment-1\")"
	                           "                    (ConceptNode \"compound-A\")"
	                           "                  )"
	                           "                )"
	                           "              )"
	                           "            )"
	                           "          )"
	                           "        )"
	                           "      )"
	                           "      (ExecutionOutputLink"
	                           "        (GroundedSchemaNode \"scm: implication-and-lambda-factorization-formula\")"
	                           "        (ImplicationLink"
	                           "          (AndLink"
	                           "            (LambdaLink"
	                           "              (TypedVariableLink"
	                           "                (VariableNode \"$X\")"
	                           "                (TypeNode \"ConceptNode\")"
	                           "              )"
	                           "              (EvaluationLink"
	                           "                (PredicateNode \"contain\")"
	                           "                (ListLink"
	                           "                  (ConceptNode \"treatment-1\")"
	                           "                  (ConceptNode \"compound-A\")"
	                           "                )"
	                           "              )"
	                           "            )"
	                           "            (LambdaLink"
	                           "              (TypedVariableLink"
	                           "                (VariableNode \"$X\")"
	                           "                (TypeNode \"ConceptNode\")"
	                           "              )"
	                           "              (EvaluationLink"
	                           "                (PredicateNode \"take\")"
	                           "                (ListLink"
	                           "                  (VariableNode \"$X\")"
	                           "                  (ConceptNode \"treatment-1\")"
	                           "                )"
	                           "              )"
	                           "            )"
	                           "          )"
	                           "          (LambdaLink"
	                           "            (TypedVariableLink"
	                           "              (VariableNode \"$X\")"
	                           "              (TypeNode \"ConceptNode\")"
	                           "            )"
	                           "            (AndLink"
	                           "              (EvaluationLink"
	                           "                (PredicateNode \"contain\")"
	                           "                (ListLink"
	                           "                  (ConceptNode \"treatment-1\")"
	                           "                  (ConceptNode \"compound-A\")"
	                           "                )"
	                           "              )"
	                           "              (EvaluationLink"
	                           "                (PredicateNode \"take\")"
	                           "                (ListLink"
	                           "                  (VariableNode \"$X\")"
	                           "                  (ConceptNode \"treatment-1\")"
	                           "                )"
	                           "              )"
	                           "            )"
	                           "          )"
	                           "        )"
	                           "      )"
	                           "    )"
	                           "  )"
	                           ")"));
	OrderedHandleSet result;
	for (const auto& el : andbit.leaf2bitnode)
		result.insert(el.first);
	OrderedHandleSet expected = {
		_eval.eval_h("(LambdaLink"
		             "  (TypedVariableLink"
		             "    (VariableNode \"$X\")"
		             "    (TypeNode \"ConceptNode\")"
		             "  )"
		             "  (EvaluationLink"
		             "    (PredicateNode \"take\")"
		             "    (ListLink"
		             "      (VariableNode \"$X\")"
		             "      (ConceptNode \"treatment-1\")"
		             "    )"
		             "  )"
		             ")"),
		_eval.eval_h("(LambdaLink"
		             "  (TypedVariableLink"
		             "    (VariableNode \"$X\")"
		             "    (TypeNode \"ConceptNode\")"
		             "  )"
		             "  (EvaluationLink (stv 1.000000 1.000000)"
		             "    (PredicateNode \"contain\")"
		             "    (ListLink"
		             "      (ConceptNode \"treatment-1\")"
		             "      (ConceptNode \"compound-A\")"
		             "    )"
		             "  )"
		             ")")};

	std::cout << "result = " << oc_to_string(result);
	std::cout << "expected = " << oc_to_string(expected);

	TS_ASSERT_EQUALS(result, expected);
}
