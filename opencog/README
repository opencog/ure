
                  AtomSpace Source Code
                  ---------------------

This directory contains core AtomSpace code.  Tests, example and demo
programs have their own directories.

Source code overview:

atoms/base      -- Defines atoms, nodes, links, truth values, etc.
                   Everything else depends on this.

atoms/core      -- Assorted special-case atoms, defined as C++ classes.
                   These typically cache some special information,
                   or have "imperative" methods that do special things,
                   when called.

atomspace       -- The in-RAM database or "symbol table" that holds
                   atoms. It assures that only one version of any
                   given atom can ever be found.

persist         -- Methods for communication between servers, also,
                   saving/restoring the atomspace to databases.

query           -- Pattern matching for the atomspace. Allows for
                   specific patterns to be extracted from the atomspace.
                   Like SQL, but for graphs, instead of tables.

rule-engine     -- Allows arbitrary collections of rules to be applied
                   to the atomspace. Provides forward and backward
                   chainers.

matrix          -- Allows a subset of the atomspace to be presented
                   as a covariance matrix, allowing statistical
                   correlation analysis to be performed on this subset.

network         -- Allows a grammatical network to be infered from a
                   sequence of events (a sequence of atoms) Currently
                   implements a Maximum Spanning Tree (MST) parser.

guile, scm      -- Scheme language bindings.
haskell         -- Haskell language bindings.
python,cython   -- Python langauge bindings.

benchmark       -- Performance benchmarks.
